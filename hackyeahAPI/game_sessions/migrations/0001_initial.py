# Generated by Django 5.2.7 on 2025-10-04 15:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('game_rules', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(max_length=100, verbose_name='Imię postaci')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy gra jest aktywna?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('last_played_at', models.DateTimeField(auto_now=True, verbose_name='Ostatnio grana')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game_rules.gamescenario', verbose_name='Scenariusz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Gracz')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterState',
            fields=[
                ('game_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='state', serialize=False, to='game_sessions.gamesession', verbose_name='Sesja gry')),
                ('current_age', models.PositiveSmallIntegerField(verbose_name='Aktualny wiek')),
                ('health', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Zdrowie (%)')),
                ('happiness', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Szczęście (%)')),
                ('cash_balance', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='Stan gotówki')),
                ('zus_balance', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='Saldo ZUS')),
                ('hobbies', models.ManyToManyField(blank=True, to='game_rules.hobby', verbose_name='Hobby postaci')),
            ],
        ),
    ]
